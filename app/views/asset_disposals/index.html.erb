 <script src="https://www.layuicdn.com/layui/layui.js"></script>
 <script src="https://cdn.staticfile.org/jquery/1.11.3/jquery.min.js"></script>
 <link rel="stylesheet" type="text/css" href="https://www.layuicdn.com/layui/css/layui.css" />
 <%=javascript_pack_tag 'tabadd' %>
 <style>
   .layui-table-page select {
     height: 26px;
   }
   .layui-disabled {
     background-color: #fff !important;
   }
   .layui-laypage select {
     padding: 0px;
     border-radius: 2px;
     cursor: pointer;
   }
   .layui-table-page {
     text-align: center;
   }
   .layui-laypage .layui-laypage-skip {
     color: #000;
   }
   .layui-table-box {
     position: relative;
     overflow: hidden;
     text-align: center;
   }
 </style> 
 <!--列表菜单-->
 <div class="layui-btn-group " style="margin:10px;0px;">
   <a data-url="/asset_disposals/new" data-id="new_asset_disposals" data-title="资产处置单-新增" class="linkActive"><button
       type="button" class="layui-btn">新增</button></a>
   <a id="a_update" rel="nofollow" class="linkActive" data-id="edit_asset_disposals" data-title="资产处置单-修改"><button
       type="button" class="layui-btn" onclick="getCheckedCheckbox_update()">修改</button></a>
   <a id="a_delete" rel="nofollow"><button onclick="model_delete('  <%=asset_disposals_destroy_multiple_path%>')"
       type="button" class="layui-btn">删除</button></a>
   <a rel="nofollow"><button type="button" onclick="Refresh()" class="layui-btn">刷新</button></a>
   <input type="file" id="file" style="display:none;"
     accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" />
   <a rel="nofollow"><button type="button" onclick="selectFile()" class="layui-btn">导入</button></a>
   <a rel="nofollow"><button type="button" onclick="exportSpecialExcel()" class="layui-btn">导出</button></a>
 </div>
 <!--单据列表-->
 <table class="layui-hide" id="asset_disposals" lay-filter="asset_disposals"></table>
 <script>
   layui.use('table', function () {
     var table = layui.table;
     table.render({
       elem: '#asset_disposals',
       url: '/asset_disposals_Get_Data',
       toolbar: '#toolbarDemo' //开启头部工具栏，并为其绑定左侧模板
         ,
       defaultToolbar: ['filter', 'exports', 'print', { //自定义头部工具栏右侧图标。如无需自定义，去除该参数即可
         title: '刷新',
         layEvent: 'Refresh',
         icon: "layui-icon-refresh-3"
       }, { //自定义头部工具栏右侧图标。如无需自定义，去除该参数即可
         title: '新增',
         layEvent: 'Add',
         icon: "layui-icon-addition"
       }],
       title: '用户数据表',
       cols: [
         [{
             type: 'checkbox'
           }, {
             field: 'FBillno',
             width: 80,
             title: '单据编号',
             sort: true
           } ,{
             field: 'Disposemethod',
             title: '处置方式',
             sort: true
           },{
             field: 'DisposeReason',
             title: '处置原因',
             sort: true
           },{
             field: 'Fbillstatus',
             title: '单据状态',
             sort: true
           }, {
             field: 'Approver',
             title: '审核人',
             sort: true
           }, {
             field: 'ApproveDate',
             title: '审核日期'
           }
         ]
       ],
       page: true
     });
     //监听行单击事件（双击事件为：rowDouble）
     table.on('row(test)', function (obj) {
       var data = obj.data; 
       // layer.alert(JSON.stringify(data), {
       //   title: '当前行数据：'
       // }); 
       //标注选中样式
       obj.tr.addClass('layui-table-click').siblings().removeClass('layui-table-click');
     });
     //头工具栏事件
     table.on('toolbar(test)', function (obj) {
       var checkStatus = table.checkStatus(obj.config.id);
       switch (obj.event) {
         //自定义头工具栏右侧图标 - 提示
         case 'Refresh':
           Refresh();
           break;
       };
     });
   }); 
 
   //单元格点击事件
   $(document).on("click", ".layui-table-body table.layui-table tbody td", function () { 
     if ($(this)[0].className == "") {
       var index = $(this)[0].parentElement.attributes[0].value;
       var tableBox = $(this).parents('.layui-table-box');
       //存在固定列
       tableDiv = tableBox.find(".layui-table-body.layui-table-main");
       //获取已选中列并取消选中 
       //选中单击行
       var checkCell = tableDiv.find("tr[data-index=" + index + "]").find(
         "td div.laytable-cell-checkbox div.layui-form-checkbox I");
       checkCell.click(); //勾选复选框
     }
   });
   //设置百分比，忽略
   function setPercent(Rate) {
     layui.use('element', function () {
       var $ = layui.jquery,
         element = layui.element; //Tab的切换功能，切换事件监听等，需要依赖element模块 
       element.progress('demo', Rate + '%')
     })
   }; 
   // 将一个sheet转成最终的excel文件的blob对象，然后利用URL.createObjectURL下载
   function sheet2blob(sheet, sheetName) {
     sheetName = sheetName || 'sheet1';
     var workbook = {
       SheetNames: [sheetName],
       Sheets: {}
     };
     workbook.Sheets[sheetName] = sheet;
     // 生成excel的配置项
     var wopts = {
       bookType: 'xlsx', // 要生成的文件类型
       bookSST: false, // 是否生成Shared String Table，官方解释是，如果开启生成速度会下降，但在低版本IOS设备上有更好的兼容性
       type: 'binary'
     };
     var wbout = XLSX.write(workbook, wopts);
     var blob = new Blob([s2ab(wbout)], {
       type: "application/octet-stream"
     });
     // 字符串转ArrayBuffer
     function s2ab(s) {
       var buf = new ArrayBuffer(s.length);
       var view = new Uint8Array(buf);
       for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;
       return buf;
     }
     return blob;
   }
   /**
    * 通用的打开下载对话框方法，没有测试过具体兼容性
    * @param url 下载地址，也可以是一个blob对象，必选
    * @param saveName 保存文件名，可选
    */
   function openDownloadDialog(url, saveName) {
     if (typeof url == 'object' && url instanceof Blob) {
       url = URL.createObjectURL(url); // 创建blob地址
     }
     var aLink = document.createElement('a');
     aLink.href = url;
     aLink.download = saveName || ''; // HTML5新增的属性，指定保存文件名，可以不要后缀，注意，file:///模式下不会生效
     var event;
     if (window.MouseEvent) event = new MouseEvent('click');
     else {
       event = document.createEvent('MouseEvents');
       event.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
     }
     aLink.dispatchEvent(event);
   }
   function exportSpecialExcel() {
     $.ajax({
       type: "get",
       url: "/asset_disposals_export_all",
       data: {},
       success: function () {
         location.reload();
       },
       error: function () {
       }
     });
     return;
   }
   function selectFile() {
     $("progress").show();
     document.getElementById('file').click();
   }
   $(function () {
     document.getElementById('file').addEventListener('change', function (e) {
       var files = e.target.files;
       if (files.length == 0) return;
       var f = files[0];
       if (!/\.xlsx$/g.test(f.name)) {
         alert('仅支持读取xlsx格式！');
         return;
       }
       setPercent('20');
       readWorkbookFromLocalFile(f, function (workbook) {
         readWorkbook(workbook);
       });
     });
   });
   // 读取本地excel文件
   function readWorkbookFromLocalFile(file, callback) {
     var reader = new FileReader();
     setPercent('40');
     reader.onload = function (e) {
       var data = e.target.result;
       var workbook = XLSX.read(data, {
         type: 'binary'
       });
       if (callback) callback(workbook);
     };
     reader.readAsBinaryString(file);
   }
   function readWorkbook(workbook) {
     var sheetNames = workbook.SheetNames; // 工作表名称集合
     var worksheet = workbook.Sheets[sheetNames[0]]; // 这里我们只读取第一张sheet 
     var csv = XLSX.utils.sheet_to_csv(worksheet);
     var datas = getdatas(csv);
     setPercent('80');
     SaveByAjax(datas);
     setPercent('100');
   }
   function getdatas(csv) {
     var datas = new Array();
     var rows = csv.split('\n');
     var index = 0;
     rows.pop(); // 最后一行没用的
     rows.shift(); //删掉列头
     rows.forEach(function (row, idx) {
       var columns = row.split(',');
       datas[index] = columns;
       index++;
     });
     return datas;
   }
   //导入，忽略
   function SaveByAjax(datas) {
     $.ajax({
       type: "post",
       url: "/save_multiple",
       data: {
         "asset_disposalsid": datas
       },
       success: function (res) {
         $("#progress").hide();
         alert('导入成功')
         location.reload();
       },
       error: function () {
         alert("导入失败")
         location.reload();
       }
     });
   }
 </script>
 <script crossorigin="anonymous"
   integrity="sha512-WNLxfP/8cVYL9sj8Jnp6et0BkubLP31jhTG9vhL/F5uEZmg5wEzKoXp1kJslzPQWwPT1eyMiSxlKCgzHLOTOTQ=="
   src="https://lib.baomitu.com/jquery/3.5.1/jquery.js"></script>
 <script type="text/javascript"> 
   //修改单据
   function getCheckedCheckbox_update() {
     var table = layui.table;
     var checkStatus = table.checkStatus('asset_disposals'); //获取勾选复选框的单据行
     if (checkStatus.data.length > 1) { //勾选多张单据，则弹出错误信息
       alert("选择了多行数据，请选择1行！");
       document.getElementById("a_update").href = "";
       return false;
     } else if (checkStatus.data.length == 0) { //没有勾选单据，则弹出错误信息
       alert("没有选择数据，请重新选择！");
       document.getElementById("a_update").href = "";
       document.getElementById("a_update").dataset.url = "";
       return false;
     }
     var asset_disposals_id = "/asset_disposals/" + checkStatus.data[0].id + "/edit";
     //跳转勾选单据行的单据页面
     document.getElementById("a_update").dataset.url = asset_disposals_id
   } 
   //删除
   function model_delete(path) { 
     //确认是否删除
     if (!confirm('你确定要删除吗？')) {
       return false
     }
     var items = new Array();
     var table = layui.table;
     var checkStatus = table.checkStatus('asset_disposals').data; //获取勾选复选框的单据行
     for (var i = 0; i < checkStatus.length; i++) {
       //遍历勾选复选框的单据行，获取单据Id
       items[i] = checkStatus[i].id
     }
     if (items.length == 0) //没有勾选单据行
     {
       alert("请选择单据！");
       return;
     }
     var resturl = path;
     //传递勾选的单据id传递到后端删除接口
     $.ajax({
       type: "post",
       url: resturl,
       data: {
         "asset_disposalsid": items
       },
       success: function (res) {
         //弹出删除信息
         if (res.code == 200) {
           alert(res.message);
           location.reload();
         } else {
           alert(res.message);
         }
       }
     });
   }
   //刷新
   function Refresh() {
     location.reload([true])
   }
   $(document).ready(function () {
     $("#progress").hide();
   });
 </script>